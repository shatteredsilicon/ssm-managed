syntax = "proto3";

package api;

option go_package = ".;api";
import "google/api/annotations.proto";

message RDSNode {
    reserved 1, 2; // id and type

    string region = 3;
    string name = 4;
}

message RDSService {
    reserved 1, 2, 3; // id, type, and node_id

    string address = 4;
    uint32 port = 5;
    string engine = 6;
    string engine_version = 7;
}

message RDSAgent {
    string qan_db_instance_uuid = 1;
}

message RDSInstanceID {
    string region = 1;
    string name = 2;
}

message RDSInstance {
    RDSNode node = 1;
    RDSService service = 2;
    RDSAgent agent = 3;
}

message RDSDiscoverRequest {
    string aws_access_key_id = 1;
    string aws_secret_access_key = 2;
}

message RDSDiscoverResponse {
    repeated RDSInstance instances = 1;
}

message RDSListRequest {
}

message RDSListResponse {
    repeated RDSInstance instances = 1;
}

message RDSAddRequest {
    string aws_access_key_id = 1;
    string aws_secret_access_key = 2;
    RDSInstanceID id = 3;
    string username = 4;
    string password = 5;
}

message RDSAddResponse {
}

message RDSRemoveRequest {
    RDSInstanceID id = 1;
}

message RDSRemoveResponse {
}

message RDSDetailRequest {
    string qan_db_instance_uuid = 1;
    string server_username = 2;
    string server_password = 3;
}

message RDSDetailResponse {
    string aws_access_key_id = 1;
    string aws_secret_access_key = 2;
    string region = 3;
    string instance = 4;
}

service RDS {
    rpc Discover(RDSDiscoverRequest) returns (RDSDiscoverResponse) {
        option (google.api.http) = {
            post: "/v0/rds/discover"
            body: "*"
        };
    }

    rpc List(RDSListRequest) returns (RDSListResponse) {
        option (google.api.http) = {
            get: "/v0/rds"
        };
    }

    rpc Add(RDSAddRequest) returns (RDSAddResponse) {
        option (google.api.http) = {
            post: "/v0/rds"
            body: "*"
        };
    }

    rpc Remove(RDSRemoveRequest) returns (RDSRemoveResponse) {
        option (google.api.http) = {
            delete: "/v0/rds"
            body: "*"
        };
    }

    rpc Detail(RDSDetailRequest) returns (RDSDetailResponse) {
        option (google.api.http) = {
            get: "/v0/rds/detail"
        };
    }
}
