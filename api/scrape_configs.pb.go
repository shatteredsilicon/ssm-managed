// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scrape_configs.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Target health : unknown, down, or up.
type ScrapeTargetHealth_Health int32

const (
	ScrapeTargetHealth_UNKNOWN ScrapeTargetHealth_Health = 0
	ScrapeTargetHealth_DOWN    ScrapeTargetHealth_Health = 1
	ScrapeTargetHealth_UP      ScrapeTargetHealth_Health = 2
)

var ScrapeTargetHealth_Health_name = map[int32]string{
	0: "UNKNOWN",
	1: "DOWN",
	2: "UP",
}
var ScrapeTargetHealth_Health_value = map[string]int32{
	"UNKNOWN": 0,
	"DOWN":    1,
	"UP":      2,
}

func (x ScrapeTargetHealth_Health) String() string {
	return proto.EnumName(ScrapeTargetHealth_Health_name, int32(x))
}
func (ScrapeTargetHealth_Health) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{5, 0}
}

type LabelPair struct {
	// Label name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Label value
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LabelPair) Reset()         { *m = LabelPair{} }
func (m *LabelPair) String() string { return proto.CompactTextString(m) }
func (*LabelPair) ProtoMessage()    {}
func (*LabelPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{0}
}
func (m *LabelPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelPair.Unmarshal(m, b)
}
func (m *LabelPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelPair.Marshal(b, m, deterministic)
}
func (dst *LabelPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelPair.Merge(dst, src)
}
func (m *LabelPair) XXX_Size() int {
	return xxx_messageInfo_LabelPair.Size(m)
}
func (m *LabelPair) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelPair.DiscardUnknown(m)
}

var xxx_messageInfo_LabelPair proto.InternalMessageInfo

func (m *LabelPair) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LabelPair) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type StaticConfig struct {
	// Hostnames or IPs followed by an optional port number: "1.2.3.4:9090"
	Targets []string `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	// Labels assigned to all metrics scraped from the targets
	Labels               []*LabelPair `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *StaticConfig) Reset()         { *m = StaticConfig{} }
func (m *StaticConfig) String() string { return proto.CompactTextString(m) }
func (*StaticConfig) ProtoMessage()    {}
func (*StaticConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{1}
}
func (m *StaticConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaticConfig.Unmarshal(m, b)
}
func (m *StaticConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaticConfig.Marshal(b, m, deterministic)
}
func (dst *StaticConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaticConfig.Merge(dst, src)
}
func (m *StaticConfig) XXX_Size() int {
	return xxx_messageInfo_StaticConfig.Size(m)
}
func (m *StaticConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_StaticConfig.DiscardUnknown(m)
}

var xxx_messageInfo_StaticConfig proto.InternalMessageInfo

func (m *StaticConfig) GetTargets() []string {
	if m != nil {
		return m.Targets
	}
	return nil
}

func (m *StaticConfig) GetLabels() []*LabelPair {
	if m != nil {
		return m.Labels
	}
	return nil
}

type BasicAuth struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BasicAuth) Reset()         { *m = BasicAuth{} }
func (m *BasicAuth) String() string { return proto.CompactTextString(m) }
func (*BasicAuth) ProtoMessage()    {}
func (*BasicAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{2}
}
func (m *BasicAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BasicAuth.Unmarshal(m, b)
}
func (m *BasicAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BasicAuth.Marshal(b, m, deterministic)
}
func (dst *BasicAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BasicAuth.Merge(dst, src)
}
func (m *BasicAuth) XXX_Size() int {
	return xxx_messageInfo_BasicAuth.Size(m)
}
func (m *BasicAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_BasicAuth.DiscardUnknown(m)
}

var xxx_messageInfo_BasicAuth proto.InternalMessageInfo

func (m *BasicAuth) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *BasicAuth) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type TLSConfig struct {
	InsecureSkipVerify   bool     `protobuf:"varint,5,opt,name=insecure_skip_verify,json=insecureSkipVerify,proto3" json:"insecure_skip_verify,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSConfig) Reset()         { *m = TLSConfig{} }
func (m *TLSConfig) String() string { return proto.CompactTextString(m) }
func (*TLSConfig) ProtoMessage()    {}
func (*TLSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{3}
}
func (m *TLSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSConfig.Unmarshal(m, b)
}
func (m *TLSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSConfig.Marshal(b, m, deterministic)
}
func (dst *TLSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSConfig.Merge(dst, src)
}
func (m *TLSConfig) XXX_Size() int {
	return xxx_messageInfo_TLSConfig.Size(m)
}
func (m *TLSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLSConfig proto.InternalMessageInfo

func (m *TLSConfig) GetInsecureSkipVerify() bool {
	if m != nil {
		return m.InsecureSkipVerify
	}
	return false
}

type ScrapeConfig struct {
	// The job name assigned to scraped metrics by default: "example-job" (required)
	JobName string `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	// How frequently to scrape targets from this job: "10s"
	ScrapeInterval string `protobuf:"bytes,2,opt,name=scrape_interval,json=scrapeInterval,proto3" json:"scrape_interval,omitempty"`
	// Per-scrape timeout when scraping this job: "5s"
	ScrapeTimeout string `protobuf:"bytes,3,opt,name=scrape_timeout,json=scrapeTimeout,proto3" json:"scrape_timeout,omitempty"`
	// The HTTP resource path on which to fetch metrics from targets: "/metrics"
	MetricsPath string `protobuf:"bytes,4,opt,name=metrics_path,json=metricsPath,proto3" json:"metrics_path,omitempty"`
	// Configures the protocol scheme used for requests: "http" or "https"
	Scheme string `protobuf:"bytes,5,opt,name=scheme,proto3" json:"scheme,omitempty"`
	// Sets the `Authorization` header on every scrape request with the configured username and password
	BasicAuth *BasicAuth `protobuf:"bytes,6,opt,name=basic_auth,json=basicAuth,proto3" json:"basic_auth,omitempty"`
	// Configures the scrape request's TLS settings
	TlsConfig *TLSConfig `protobuf:"bytes,7,opt,name=tls_config,json=tlsConfig,proto3" json:"tls_config,omitempty"`
	// List of labeled statically configured targets for this job
	StaticConfigs        []*StaticConfig `protobuf:"bytes,8,rep,name=static_configs,json=staticConfigs,proto3" json:"static_configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ScrapeConfig) Reset()         { *m = ScrapeConfig{} }
func (m *ScrapeConfig) String() string { return proto.CompactTextString(m) }
func (*ScrapeConfig) ProtoMessage()    {}
func (*ScrapeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{4}
}
func (m *ScrapeConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScrapeConfig.Unmarshal(m, b)
}
func (m *ScrapeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScrapeConfig.Marshal(b, m, deterministic)
}
func (dst *ScrapeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScrapeConfig.Merge(dst, src)
}
func (m *ScrapeConfig) XXX_Size() int {
	return xxx_messageInfo_ScrapeConfig.Size(m)
}
func (m *ScrapeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ScrapeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ScrapeConfig proto.InternalMessageInfo

func (m *ScrapeConfig) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

func (m *ScrapeConfig) GetScrapeInterval() string {
	if m != nil {
		return m.ScrapeInterval
	}
	return ""
}

func (m *ScrapeConfig) GetScrapeTimeout() string {
	if m != nil {
		return m.ScrapeTimeout
	}
	return ""
}

func (m *ScrapeConfig) GetMetricsPath() string {
	if m != nil {
		return m.MetricsPath
	}
	return ""
}

func (m *ScrapeConfig) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *ScrapeConfig) GetBasicAuth() *BasicAuth {
	if m != nil {
		return m.BasicAuth
	}
	return nil
}

func (m *ScrapeConfig) GetTlsConfig() *TLSConfig {
	if m != nil {
		return m.TlsConfig
	}
	return nil
}

func (m *ScrapeConfig) GetStaticConfigs() []*StaticConfig {
	if m != nil {
		return m.StaticConfigs
	}
	return nil
}

// ScrapeTargetHealth represents Prometheus scrape target health: unknown, down, or up.
type ScrapeTargetHealth struct {
	// Original scrape job name
	JobName string `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	// "job" label value, may be different from job_name due to relabeling
	Job string `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
	// Original target
	Target string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	// "instance" label value, may be different from target due to relabeling
	Instance             string                    `protobuf:"bytes,4,opt,name=instance,proto3" json:"instance,omitempty"`
	Health               ScrapeTargetHealth_Health `protobuf:"varint,5,opt,name=health,proto3,enum=api.ScrapeTargetHealth_Health" json:"health,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ScrapeTargetHealth) Reset()         { *m = ScrapeTargetHealth{} }
func (m *ScrapeTargetHealth) String() string { return proto.CompactTextString(m) }
func (*ScrapeTargetHealth) ProtoMessage()    {}
func (*ScrapeTargetHealth) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{5}
}
func (m *ScrapeTargetHealth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScrapeTargetHealth.Unmarshal(m, b)
}
func (m *ScrapeTargetHealth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScrapeTargetHealth.Marshal(b, m, deterministic)
}
func (dst *ScrapeTargetHealth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScrapeTargetHealth.Merge(dst, src)
}
func (m *ScrapeTargetHealth) XXX_Size() int {
	return xxx_messageInfo_ScrapeTargetHealth.Size(m)
}
func (m *ScrapeTargetHealth) XXX_DiscardUnknown() {
	xxx_messageInfo_ScrapeTargetHealth.DiscardUnknown(m)
}

var xxx_messageInfo_ScrapeTargetHealth proto.InternalMessageInfo

func (m *ScrapeTargetHealth) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

func (m *ScrapeTargetHealth) GetJob() string {
	if m != nil {
		return m.Job
	}
	return ""
}

func (m *ScrapeTargetHealth) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *ScrapeTargetHealth) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *ScrapeTargetHealth) GetHealth() ScrapeTargetHealth_Health {
	if m != nil {
		return m.Health
	}
	return ScrapeTargetHealth_UNKNOWN
}

type ScrapeConfigsListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScrapeConfigsListRequest) Reset()         { *m = ScrapeConfigsListRequest{} }
func (m *ScrapeConfigsListRequest) String() string { return proto.CompactTextString(m) }
func (*ScrapeConfigsListRequest) ProtoMessage()    {}
func (*ScrapeConfigsListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{6}
}
func (m *ScrapeConfigsListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScrapeConfigsListRequest.Unmarshal(m, b)
}
func (m *ScrapeConfigsListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScrapeConfigsListRequest.Marshal(b, m, deterministic)
}
func (dst *ScrapeConfigsListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScrapeConfigsListRequest.Merge(dst, src)
}
func (m *ScrapeConfigsListRequest) XXX_Size() int {
	return xxx_messageInfo_ScrapeConfigsListRequest.Size(m)
}
func (m *ScrapeConfigsListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScrapeConfigsListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScrapeConfigsListRequest proto.InternalMessageInfo

type ScrapeConfigsListResponse struct {
	ScrapeConfigs []*ScrapeConfig `protobuf:"bytes,1,rep,name=scrape_configs,json=scrapeConfigs,proto3" json:"scrape_configs,omitempty"`
	// Scrape targets health for all managed scrape jobs
	ScrapeTargetsHealth  []*ScrapeTargetHealth `protobuf:"bytes,2,rep,name=scrape_targets_health,json=scrapeTargetsHealth,proto3" json:"scrape_targets_health,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ScrapeConfigsListResponse) Reset()         { *m = ScrapeConfigsListResponse{} }
func (m *ScrapeConfigsListResponse) String() string { return proto.CompactTextString(m) }
func (*ScrapeConfigsListResponse) ProtoMessage()    {}
func (*ScrapeConfigsListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{7}
}
func (m *ScrapeConfigsListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScrapeConfigsListResponse.Unmarshal(m, b)
}
func (m *ScrapeConfigsListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScrapeConfigsListResponse.Marshal(b, m, deterministic)
}
func (dst *ScrapeConfigsListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScrapeConfigsListResponse.Merge(dst, src)
}
func (m *ScrapeConfigsListResponse) XXX_Size() int {
	return xxx_messageInfo_ScrapeConfigsListResponse.Size(m)
}
func (m *ScrapeConfigsListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScrapeConfigsListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScrapeConfigsListResponse proto.InternalMessageInfo

func (m *ScrapeConfigsListResponse) GetScrapeConfigs() []*ScrapeConfig {
	if m != nil {
		return m.ScrapeConfigs
	}
	return nil
}

func (m *ScrapeConfigsListResponse) GetScrapeTargetsHealth() []*ScrapeTargetHealth {
	if m != nil {
		return m.ScrapeTargetsHealth
	}
	return nil
}

type ScrapeConfigsGetRequest struct {
	JobName              string   `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScrapeConfigsGetRequest) Reset()         { *m = ScrapeConfigsGetRequest{} }
func (m *ScrapeConfigsGetRequest) String() string { return proto.CompactTextString(m) }
func (*ScrapeConfigsGetRequest) ProtoMessage()    {}
func (*ScrapeConfigsGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{8}
}
func (m *ScrapeConfigsGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScrapeConfigsGetRequest.Unmarshal(m, b)
}
func (m *ScrapeConfigsGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScrapeConfigsGetRequest.Marshal(b, m, deterministic)
}
func (dst *ScrapeConfigsGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScrapeConfigsGetRequest.Merge(dst, src)
}
func (m *ScrapeConfigsGetRequest) XXX_Size() int {
	return xxx_messageInfo_ScrapeConfigsGetRequest.Size(m)
}
func (m *ScrapeConfigsGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScrapeConfigsGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScrapeConfigsGetRequest proto.InternalMessageInfo

func (m *ScrapeConfigsGetRequest) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

type ScrapeConfigsGetResponse struct {
	ScrapeConfig *ScrapeConfig `protobuf:"bytes,1,opt,name=scrape_config,json=scrapeConfig,proto3" json:"scrape_config,omitempty"`
	// Scrape targets health for this scrape job
	ScrapeTargetsHealth  []*ScrapeTargetHealth `protobuf:"bytes,2,rep,name=scrape_targets_health,json=scrapeTargetsHealth,proto3" json:"scrape_targets_health,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ScrapeConfigsGetResponse) Reset()         { *m = ScrapeConfigsGetResponse{} }
func (m *ScrapeConfigsGetResponse) String() string { return proto.CompactTextString(m) }
func (*ScrapeConfigsGetResponse) ProtoMessage()    {}
func (*ScrapeConfigsGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{9}
}
func (m *ScrapeConfigsGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScrapeConfigsGetResponse.Unmarshal(m, b)
}
func (m *ScrapeConfigsGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScrapeConfigsGetResponse.Marshal(b, m, deterministic)
}
func (dst *ScrapeConfigsGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScrapeConfigsGetResponse.Merge(dst, src)
}
func (m *ScrapeConfigsGetResponse) XXX_Size() int {
	return xxx_messageInfo_ScrapeConfigsGetResponse.Size(m)
}
func (m *ScrapeConfigsGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScrapeConfigsGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScrapeConfigsGetResponse proto.InternalMessageInfo

func (m *ScrapeConfigsGetResponse) GetScrapeConfig() *ScrapeConfig {
	if m != nil {
		return m.ScrapeConfig
	}
	return nil
}

func (m *ScrapeConfigsGetResponse) GetScrapeTargetsHealth() []*ScrapeTargetHealth {
	if m != nil {
		return m.ScrapeTargetsHealth
	}
	return nil
}

type ScrapeConfigsCreateRequest struct {
	ScrapeConfig *ScrapeConfig `protobuf:"bytes,1,opt,name=scrape_config,json=scrapeConfig,proto3" json:"scrape_config,omitempty"`
	// Check that added targets can be scraped from PMM Server
	CheckReachability    bool     `protobuf:"varint,2,opt,name=check_reachability,json=checkReachability,proto3" json:"check_reachability,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScrapeConfigsCreateRequest) Reset()         { *m = ScrapeConfigsCreateRequest{} }
func (m *ScrapeConfigsCreateRequest) String() string { return proto.CompactTextString(m) }
func (*ScrapeConfigsCreateRequest) ProtoMessage()    {}
func (*ScrapeConfigsCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{10}
}
func (m *ScrapeConfigsCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScrapeConfigsCreateRequest.Unmarshal(m, b)
}
func (m *ScrapeConfigsCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScrapeConfigsCreateRequest.Marshal(b, m, deterministic)
}
func (dst *ScrapeConfigsCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScrapeConfigsCreateRequest.Merge(dst, src)
}
func (m *ScrapeConfigsCreateRequest) XXX_Size() int {
	return xxx_messageInfo_ScrapeConfigsCreateRequest.Size(m)
}
func (m *ScrapeConfigsCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScrapeConfigsCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScrapeConfigsCreateRequest proto.InternalMessageInfo

func (m *ScrapeConfigsCreateRequest) GetScrapeConfig() *ScrapeConfig {
	if m != nil {
		return m.ScrapeConfig
	}
	return nil
}

func (m *ScrapeConfigsCreateRequest) GetCheckReachability() bool {
	if m != nil {
		return m.CheckReachability
	}
	return false
}

type ScrapeConfigsCreateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScrapeConfigsCreateResponse) Reset()         { *m = ScrapeConfigsCreateResponse{} }
func (m *ScrapeConfigsCreateResponse) String() string { return proto.CompactTextString(m) }
func (*ScrapeConfigsCreateResponse) ProtoMessage()    {}
func (*ScrapeConfigsCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{11}
}
func (m *ScrapeConfigsCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScrapeConfigsCreateResponse.Unmarshal(m, b)
}
func (m *ScrapeConfigsCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScrapeConfigsCreateResponse.Marshal(b, m, deterministic)
}
func (dst *ScrapeConfigsCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScrapeConfigsCreateResponse.Merge(dst, src)
}
func (m *ScrapeConfigsCreateResponse) XXX_Size() int {
	return xxx_messageInfo_ScrapeConfigsCreateResponse.Size(m)
}
func (m *ScrapeConfigsCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScrapeConfigsCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScrapeConfigsCreateResponse proto.InternalMessageInfo

type ScrapeConfigsUpdateRequest struct {
	ScrapeConfig *ScrapeConfig `protobuf:"bytes,1,opt,name=scrape_config,json=scrapeConfig,proto3" json:"scrape_config,omitempty"`
	// Check that added targets can be scraped from PMM Server
	CheckReachability    bool     `protobuf:"varint,2,opt,name=check_reachability,json=checkReachability,proto3" json:"check_reachability,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScrapeConfigsUpdateRequest) Reset()         { *m = ScrapeConfigsUpdateRequest{} }
func (m *ScrapeConfigsUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*ScrapeConfigsUpdateRequest) ProtoMessage()    {}
func (*ScrapeConfigsUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{12}
}
func (m *ScrapeConfigsUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScrapeConfigsUpdateRequest.Unmarshal(m, b)
}
func (m *ScrapeConfigsUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScrapeConfigsUpdateRequest.Marshal(b, m, deterministic)
}
func (dst *ScrapeConfigsUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScrapeConfigsUpdateRequest.Merge(dst, src)
}
func (m *ScrapeConfigsUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_ScrapeConfigsUpdateRequest.Size(m)
}
func (m *ScrapeConfigsUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScrapeConfigsUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScrapeConfigsUpdateRequest proto.InternalMessageInfo

func (m *ScrapeConfigsUpdateRequest) GetScrapeConfig() *ScrapeConfig {
	if m != nil {
		return m.ScrapeConfig
	}
	return nil
}

func (m *ScrapeConfigsUpdateRequest) GetCheckReachability() bool {
	if m != nil {
		return m.CheckReachability
	}
	return false
}

type ScrapeConfigsUpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScrapeConfigsUpdateResponse) Reset()         { *m = ScrapeConfigsUpdateResponse{} }
func (m *ScrapeConfigsUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*ScrapeConfigsUpdateResponse) ProtoMessage()    {}
func (*ScrapeConfigsUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{13}
}
func (m *ScrapeConfigsUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScrapeConfigsUpdateResponse.Unmarshal(m, b)
}
func (m *ScrapeConfigsUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScrapeConfigsUpdateResponse.Marshal(b, m, deterministic)
}
func (dst *ScrapeConfigsUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScrapeConfigsUpdateResponse.Merge(dst, src)
}
func (m *ScrapeConfigsUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_ScrapeConfigsUpdateResponse.Size(m)
}
func (m *ScrapeConfigsUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScrapeConfigsUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScrapeConfigsUpdateResponse proto.InternalMessageInfo

type ScrapeConfigsDeleteRequest struct {
	JobName              string   `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScrapeConfigsDeleteRequest) Reset()         { *m = ScrapeConfigsDeleteRequest{} }
func (m *ScrapeConfigsDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*ScrapeConfigsDeleteRequest) ProtoMessage()    {}
func (*ScrapeConfigsDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{14}
}
func (m *ScrapeConfigsDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScrapeConfigsDeleteRequest.Unmarshal(m, b)
}
func (m *ScrapeConfigsDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScrapeConfigsDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *ScrapeConfigsDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScrapeConfigsDeleteRequest.Merge(dst, src)
}
func (m *ScrapeConfigsDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_ScrapeConfigsDeleteRequest.Size(m)
}
func (m *ScrapeConfigsDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScrapeConfigsDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScrapeConfigsDeleteRequest proto.InternalMessageInfo

func (m *ScrapeConfigsDeleteRequest) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

type ScrapeConfigsDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScrapeConfigsDeleteResponse) Reset()         { *m = ScrapeConfigsDeleteResponse{} }
func (m *ScrapeConfigsDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*ScrapeConfigsDeleteResponse) ProtoMessage()    {}
func (*ScrapeConfigsDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_scrape_configs_7f58703015052f2f, []int{15}
}
func (m *ScrapeConfigsDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScrapeConfigsDeleteResponse.Unmarshal(m, b)
}
func (m *ScrapeConfigsDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScrapeConfigsDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *ScrapeConfigsDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScrapeConfigsDeleteResponse.Merge(dst, src)
}
func (m *ScrapeConfigsDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_ScrapeConfigsDeleteResponse.Size(m)
}
func (m *ScrapeConfigsDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScrapeConfigsDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScrapeConfigsDeleteResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*LabelPair)(nil), "api.LabelPair")
	proto.RegisterType((*StaticConfig)(nil), "api.StaticConfig")
	proto.RegisterType((*BasicAuth)(nil), "api.BasicAuth")
	proto.RegisterType((*TLSConfig)(nil), "api.TLSConfig")
	proto.RegisterType((*ScrapeConfig)(nil), "api.ScrapeConfig")
	proto.RegisterType((*ScrapeTargetHealth)(nil), "api.ScrapeTargetHealth")
	proto.RegisterType((*ScrapeConfigsListRequest)(nil), "api.ScrapeConfigsListRequest")
	proto.RegisterType((*ScrapeConfigsListResponse)(nil), "api.ScrapeConfigsListResponse")
	proto.RegisterType((*ScrapeConfigsGetRequest)(nil), "api.ScrapeConfigsGetRequest")
	proto.RegisterType((*ScrapeConfigsGetResponse)(nil), "api.ScrapeConfigsGetResponse")
	proto.RegisterType((*ScrapeConfigsCreateRequest)(nil), "api.ScrapeConfigsCreateRequest")
	proto.RegisterType((*ScrapeConfigsCreateResponse)(nil), "api.ScrapeConfigsCreateResponse")
	proto.RegisterType((*ScrapeConfigsUpdateRequest)(nil), "api.ScrapeConfigsUpdateRequest")
	proto.RegisterType((*ScrapeConfigsUpdateResponse)(nil), "api.ScrapeConfigsUpdateResponse")
	proto.RegisterType((*ScrapeConfigsDeleteRequest)(nil), "api.ScrapeConfigsDeleteRequest")
	proto.RegisterType((*ScrapeConfigsDeleteResponse)(nil), "api.ScrapeConfigsDeleteResponse")
	proto.RegisterEnum("api.ScrapeTargetHealth_Health", ScrapeTargetHealth_Health_name, ScrapeTargetHealth_Health_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScrapeConfigsClient is the client API for ScrapeConfigs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScrapeConfigsClient interface {
	// List returns all scrape configs.
	List(ctx context.Context, in *ScrapeConfigsListRequest, opts ...grpc.CallOption) (*ScrapeConfigsListResponse, error)
	// Get returns a scrape config by job name.
	// Errors: NotFound(5) if no such scrape config is present.
	Get(ctx context.Context, in *ScrapeConfigsGetRequest, opts ...grpc.CallOption) (*ScrapeConfigsGetResponse, error)
	// Create creates a new scrape config.
	// Errors: InvalidArgument(3) if some argument is not valid,
	// AlreadyExists(6) if scrape config with that job name is already present,
	// FailedPrecondition(9) if reachability check was requested and some scrape target can't be reached.
	Create(ctx context.Context, in *ScrapeConfigsCreateRequest, opts ...grpc.CallOption) (*ScrapeConfigsCreateResponse, error)
	// Update updates existing scrape config by job name.
	// Errors: InvalidArgument(3) if some argument is not valid,
	// NotFound(5) if no such scrape config is present,
	// FailedPrecondition(9) if reachability check was requested and some scrape target can't be reached.
	Update(ctx context.Context, in *ScrapeConfigsUpdateRequest, opts ...grpc.CallOption) (*ScrapeConfigsUpdateResponse, error)
	// Delete removes existing scrape config by job name.
	// Errors: NotFound(5) if no such scrape config is present.
	Delete(ctx context.Context, in *ScrapeConfigsDeleteRequest, opts ...grpc.CallOption) (*ScrapeConfigsDeleteResponse, error)
}

type scrapeConfigsClient struct {
	cc *grpc.ClientConn
}

func NewScrapeConfigsClient(cc *grpc.ClientConn) ScrapeConfigsClient {
	return &scrapeConfigsClient{cc}
}

func (c *scrapeConfigsClient) List(ctx context.Context, in *ScrapeConfigsListRequest, opts ...grpc.CallOption) (*ScrapeConfigsListResponse, error) {
	out := new(ScrapeConfigsListResponse)
	err := c.cc.Invoke(ctx, "/api.ScrapeConfigs/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scrapeConfigsClient) Get(ctx context.Context, in *ScrapeConfigsGetRequest, opts ...grpc.CallOption) (*ScrapeConfigsGetResponse, error) {
	out := new(ScrapeConfigsGetResponse)
	err := c.cc.Invoke(ctx, "/api.ScrapeConfigs/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scrapeConfigsClient) Create(ctx context.Context, in *ScrapeConfigsCreateRequest, opts ...grpc.CallOption) (*ScrapeConfigsCreateResponse, error) {
	out := new(ScrapeConfigsCreateResponse)
	err := c.cc.Invoke(ctx, "/api.ScrapeConfigs/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scrapeConfigsClient) Update(ctx context.Context, in *ScrapeConfigsUpdateRequest, opts ...grpc.CallOption) (*ScrapeConfigsUpdateResponse, error) {
	out := new(ScrapeConfigsUpdateResponse)
	err := c.cc.Invoke(ctx, "/api.ScrapeConfigs/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scrapeConfigsClient) Delete(ctx context.Context, in *ScrapeConfigsDeleteRequest, opts ...grpc.CallOption) (*ScrapeConfigsDeleteResponse, error) {
	out := new(ScrapeConfigsDeleteResponse)
	err := c.cc.Invoke(ctx, "/api.ScrapeConfigs/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScrapeConfigsServer is the server API for ScrapeConfigs service.
type ScrapeConfigsServer interface {
	// List returns all scrape configs.
	List(context.Context, *ScrapeConfigsListRequest) (*ScrapeConfigsListResponse, error)
	// Get returns a scrape config by job name.
	// Errors: NotFound(5) if no such scrape config is present.
	Get(context.Context, *ScrapeConfigsGetRequest) (*ScrapeConfigsGetResponse, error)
	// Create creates a new scrape config.
	// Errors: InvalidArgument(3) if some argument is not valid,
	// AlreadyExists(6) if scrape config with that job name is already present,
	// FailedPrecondition(9) if reachability check was requested and some scrape target can't be reached.
	Create(context.Context, *ScrapeConfigsCreateRequest) (*ScrapeConfigsCreateResponse, error)
	// Update updates existing scrape config by job name.
	// Errors: InvalidArgument(3) if some argument is not valid,
	// NotFound(5) if no such scrape config is present,
	// FailedPrecondition(9) if reachability check was requested and some scrape target can't be reached.
	Update(context.Context, *ScrapeConfigsUpdateRequest) (*ScrapeConfigsUpdateResponse, error)
	// Delete removes existing scrape config by job name.
	// Errors: NotFound(5) if no such scrape config is present.
	Delete(context.Context, *ScrapeConfigsDeleteRequest) (*ScrapeConfigsDeleteResponse, error)
}

func RegisterScrapeConfigsServer(s *grpc.Server, srv ScrapeConfigsServer) {
	s.RegisterService(&_ScrapeConfigs_serviceDesc, srv)
}

func _ScrapeConfigs_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScrapeConfigsListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScrapeConfigsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ScrapeConfigs/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScrapeConfigsServer).List(ctx, req.(*ScrapeConfigsListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScrapeConfigs_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScrapeConfigsGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScrapeConfigsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ScrapeConfigs/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScrapeConfigsServer).Get(ctx, req.(*ScrapeConfigsGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScrapeConfigs_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScrapeConfigsCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScrapeConfigsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ScrapeConfigs/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScrapeConfigsServer).Create(ctx, req.(*ScrapeConfigsCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScrapeConfigs_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScrapeConfigsUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScrapeConfigsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ScrapeConfigs/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScrapeConfigsServer).Update(ctx, req.(*ScrapeConfigsUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScrapeConfigs_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScrapeConfigsDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScrapeConfigsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ScrapeConfigs/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScrapeConfigsServer).Delete(ctx, req.(*ScrapeConfigsDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ScrapeConfigs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ScrapeConfigs",
	HandlerType: (*ScrapeConfigsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _ScrapeConfigs_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ScrapeConfigs_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _ScrapeConfigs_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ScrapeConfigs_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ScrapeConfigs_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scrape_configs.proto",
}

func init() {
	proto.RegisterFile("scrape_configs.proto", fileDescriptor_scrape_configs_7f58703015052f2f)
}

var fileDescriptor_scrape_configs_7f58703015052f2f = []byte{
	// 858 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0xc6, 0x49, 0xea, 0x8d, 0xcf, 0xfe, 0xb0, 0x1d, 0x02, 0xeb, 0x9a, 0xa6, 0x0d, 0x96, 0x4a,
	0xa3, 0xa2, 0x24, 0xab, 0x05, 0x16, 0x84, 0xc4, 0x05, 0x6c, 0xa5, 0x82, 0xba, 0x0a, 0x91, 0xb3,
	0x0b, 0x97, 0xd6, 0xd8, 0x9d, 0xc6, 0x93, 0x75, 0x6c, 0xe3, 0x99, 0x04, 0x55, 0x88, 0x1b, 0xfa,
	0x08, 0x3c, 0x00, 0x12, 0xaf, 0xc2, 0x2d, 0x77, 0x48, 0x3c, 0x01, 0x0f, 0x82, 0x3c, 0x33, 0xf6,
	0xda, 0x89, 0x93, 0x0b, 0x84, 0xc4, 0x55, 0x7c, 0xce, 0x99, 0x39, 0xe7, 0xfb, 0xbe, 0xf9, 0x8e,
	0x14, 0xe8, 0x30, 0x3f, 0xc5, 0x09, 0x71, 0xfd, 0x38, 0x7a, 0x49, 0x67, 0x6c, 0x98, 0xa4, 0x31,
	0x8f, 0x51, 0x13, 0x27, 0xd4, 0xba, 0x3f, 0x8b, 0xe3, 0x59, 0x48, 0x46, 0x38, 0xa1, 0x23, 0x1c,
	0x45, 0x31, 0xc7, 0x9c, 0xc6, 0x91, 0x3a, 0x62, 0x7f, 0x0c, 0xc6, 0x25, 0xf6, 0x48, 0x38, 0xc1,
	0x34, 0x45, 0x08, 0x5a, 0x11, 0x5e, 0x10, 0x53, 0xeb, 0x69, 0x7d, 0xc3, 0x11, 0xdf, 0xa8, 0x03,
	0x77, 0x56, 0x38, 0x5c, 0x12, 0xb3, 0x21, 0x92, 0x32, 0xb0, 0x27, 0x70, 0x30, 0xcd, 0x1a, 0xf9,
	0x17, 0x62, 0x20, 0x32, 0x61, 0x8f, 0xe3, 0x74, 0x46, 0x38, 0x33, 0xb5, 0x5e, 0xb3, 0x6f, 0x38,
	0x79, 0x88, 0xde, 0x07, 0x3d, 0xcc, 0x06, 0x30, 0xb3, 0xd1, 0x6b, 0xf6, 0xf7, 0xcf, 0x8e, 0x86,
	0x38, 0xa1, 0xc3, 0x62, 0xa6, 0xa3, 0xaa, 0xf6, 0x05, 0x18, 0x5f, 0x62, 0x46, 0xfd, 0x2f, 0x96,
	0x3c, 0x40, 0x16, 0xb4, 0x97, 0x8c, 0xa4, 0x25, 0x30, 0x45, 0x9c, 0xd5, 0x12, 0xcc, 0xd8, 0x0f,
	0x71, 0xfa, 0x42, 0x61, 0x2a, 0x62, 0xfb, 0x73, 0x30, 0xae, 0x2e, 0xa7, 0x0a, 0xd3, 0x29, 0x74,
	0x68, 0xc4, 0x88, 0xbf, 0x4c, 0x89, 0xcb, 0x6e, 0x68, 0xe2, 0xae, 0x48, 0x4a, 0x5f, 0xbe, 0x32,
	0xef, 0xf4, 0xb4, 0x7e, 0xdb, 0x41, 0x79, 0x6d, 0x7a, 0x43, 0x93, 0x6f, 0x45, 0xc5, 0xfe, 0xa3,
	0x01, 0x07, 0x53, 0x21, 0xa4, 0x6a, 0x71, 0x0f, 0xda, 0xf3, 0xd8, 0x73, 0x4b, 0x38, 0xf6, 0xe6,
	0xb1, 0x37, 0xce, 0x60, 0x3c, 0x86, 0x37, 0x95, 0xe6, 0x34, 0xe2, 0x24, 0x5d, 0xe1, 0x50, 0xa1,
	0x39, 0x92, 0xe9, 0xaf, 0x55, 0x16, 0x3d, 0x02, 0x95, 0x71, 0x39, 0x5d, 0x90, 0x78, 0xc9, 0xcd,
	0xa6, 0x38, 0x77, 0x28, 0xb3, 0x57, 0x32, 0x89, 0xde, 0x83, 0x83, 0x05, 0xe1, 0x29, 0xf5, 0x99,
	0x9b, 0x60, 0x1e, 0x98, 0x2d, 0x71, 0x68, 0x5f, 0xe5, 0x26, 0x98, 0x07, 0xe8, 0x1d, 0xd0, 0x99,
	0x1f, 0x90, 0x05, 0x11, 0x14, 0x0c, 0x47, 0x45, 0x68, 0x00, 0xe0, 0x65, 0xd2, 0xb9, 0x78, 0xc9,
	0x03, 0x53, 0xef, 0x69, 0x85, 0xcc, 0x85, 0xa2, 0x8e, 0xe1, 0x15, 0xe2, 0x0e, 0x00, 0x78, 0xc8,
	0x94, 0x55, 0xcc, 0xbd, 0xd2, 0xf1, 0x42, 0x3b, 0xc7, 0xe0, 0x21, 0x53, 0x1a, 0x7c, 0x0a, 0x47,
	0x4c, 0x3c, 0x75, 0x6e, 0x2e, 0xb3, 0x2d, 0x1e, 0xf2, 0xae, 0xb8, 0x52, 0x76, 0x81, 0x73, 0xc8,
	0x4a, 0x11, 0xb3, 0xff, 0xd2, 0x00, 0x49, 0x39, 0xaf, 0x84, 0x19, 0xbe, 0x22, 0x38, 0xe4, 0xc1,
	0x2e, 0x51, 0x8f, 0xa1, 0x39, 0x8f, 0x3d, 0x25, 0x64, 0xf6, 0x99, 0x71, 0x96, 0x4e, 0x52, 0xaa,
	0xa9, 0x28, 0x73, 0x01, 0x8d, 0x18, 0xc7, 0x91, 0x4f, 0x94, 0x54, 0x45, 0x8c, 0xce, 0x41, 0x0f,
	0xc4, 0x28, 0xa1, 0xd3, 0xd1, 0xd9, 0x03, 0x89, 0x74, 0x03, 0xc9, 0x50, 0xfe, 0x38, 0xea, 0xb4,
	0xfd, 0x18, 0x74, 0x05, 0x71, 0x1f, 0xf6, 0xae, 0xc7, 0xcf, 0xc7, 0xdf, 0x7c, 0x37, 0x3e, 0x7e,
	0x03, 0xb5, 0xa1, 0xf5, 0x34, 0xfb, 0xd2, 0x90, 0x0e, 0x8d, 0xeb, 0xc9, 0x71, 0xc3, 0xb6, 0xc0,
	0x2c, 0xdb, 0x84, 0x5d, 0x52, 0xc6, 0x1d, 0xf2, 0xfd, 0x92, 0x30, 0x6e, 0xff, 0xa6, 0xc1, 0xbd,
	0x9a, 0x22, 0x4b, 0xe2, 0x88, 0x11, 0x21, 0x66, 0x65, 0x53, 0xc5, 0xba, 0x14, 0x62, 0x96, 0xee,
	0xe5, 0xfe, 0x50, 0x5d, 0xd0, 0x73, 0x78, 0x3b, 0xb7, 0x91, 0xdc, 0x2c, 0x57, 0x71, 0x94, 0x6b,
	0x75, 0xb2, 0x85, 0xa3, 0xf3, 0x16, 0x2b, 0xe5, 0x98, 0x4c, 0xda, 0x1f, 0xc1, 0x49, 0x05, 0xe3,
	0x33, 0x92, 0xe3, 0xdf, 0xf1, 0x3a, 0xf6, 0xaf, 0xda, 0x1a, 0x6f, 0x71, 0x4d, 0x31, 0x3b, 0x87,
	0xc3, 0x0a, 0x33, 0x71, 0xb9, 0x96, 0xd8, 0x41, 0x99, 0xd8, 0x7f, 0xcb, 0xeb, 0xb5, 0x06, 0x56,
	0x05, 0xe1, 0x45, 0x4a, 0x30, 0x27, 0x39, 0xb7, 0x7f, 0x8b, 0x71, 0x00, 0xc8, 0x0f, 0x88, 0x7f,
	0xe3, 0xa6, 0x04, 0xfb, 0x01, 0xf6, 0x68, 0x48, 0xf9, 0x2b, 0xe1, 0xd2, 0xb6, 0x73, 0x57, 0x54,
	0x9c, 0x52, 0xc1, 0xee, 0xc2, 0xbb, 0xb5, 0x20, 0xa4, 0x52, 0x9b, 0x20, 0xaf, 0x93, 0x17, 0xff,
	0x3f, 0xc8, 0x1c, 0x84, 0x02, 0xf9, 0xc9, 0x1a, 0xc6, 0xa7, 0x24, 0x24, 0xb7, 0x18, 0x77, 0x98,
	0x64, 0xbd, 0x6f, 0x7e, 0x51, 0xf6, 0x3d, 0xfb, 0xbd, 0x05, 0x87, 0x95, 0x3a, 0xc2, 0xd0, 0xca,
	0x56, 0x04, 0x75, 0x37, 0x08, 0x96, 0xf7, 0xca, 0x7a, 0xb0, 0xad, 0xac, 0x00, 0x5b, 0x3f, 0xff,
	0xf9, 0xf7, 0x2f, 0x8d, 0x0e, 0x42, 0xa3, 0xd5, 0xe9, 0x48, 0x0a, 0x33, 0x50, 0x3b, 0x86, 0x28,
	0x34, 0x9f, 0x11, 0x8e, 0xee, 0x6f, 0xb6, 0xb8, 0x35, 0xbe, 0xd5, 0xdd, 0x52, 0x55, 0xfd, 0x1f,
	0x89, 0xfe, 0x0f, 0x51, 0x77, 0xb3, 0xff, 0xe8, 0xc7, 0x5c, 0x8c, 0x9f, 0xd0, 0x1c, 0x74, 0xf9,
	0xdc, 0xe8, 0xe1, 0x66, 0xbf, 0x8a, 0x1b, 0xad, 0xde, 0xf6, 0x03, 0x6a, 0x66, 0x57, 0xcc, 0x3c,
	0xb1, 0x6b, 0x38, 0x7d, 0xa6, 0x3d, 0x41, 0xaf, 0x35, 0xd0, 0xe5, 0xb3, 0xd5, 0x0d, 0xab, 0xb8,
	0xaa, 0x6e, 0xd8, 0xda, 0x8b, 0x9f, 0x8b, 0x61, 0xa7, 0xd6, 0x07, 0x75, 0x04, 0x2b, 0x8e, 0x1c,
	0x16, 0x74, 0x33, 0x14, 0x29, 0xe8, 0xf2, 0x8d, 0xeb, 0x40, 0x54, 0x6c, 0x53, 0x07, 0xa2, 0x6a,
	0x8f, 0x5c, 0xe5, 0x27, 0xbb, 0x55, 0xf6, 0x74, 0xf1, 0xe7, 0xe5, 0xc3, 0x7f, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xa8, 0x71, 0x00, 0x4f, 0xf7, 0x08, 0x00, 0x00,
}
